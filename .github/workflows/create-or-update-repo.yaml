# Options
# create a repo (optional)
# upsert PyPI secrets to the repo
# push a PR to the repo with a template

name: Create or Update Repo

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: "Create/update: phitoduck/<repo_name>"
        required: true
        type: string
      create_repo:
        description: "T/F: Create repo"
        required: true
        type: boolean
        default: true
      public:
        description: "If false, make private if creating repo"
        required: false
        type: boolean
        default: false
      package_import_name:
        description: "e.g. from <package_import_name> import *"
        required: false
        type: string

      upsert_pypi_secrets:
        description: "T/F: Upsert PyPI secrets"
        required: true
        type: boolean
        default: true

      populate_from_template:
        description: "T/F: Populate from template"
        required: true
        type: boolean
        default: true

jobs:

  create-repo:
    name: Create Repo
    if: ${{ github.event.inputs.create_repo == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure git user
        run: |
          git config --global user.email "test@test.com"
          git config --global user.name "Eric Riddoch"
      - name: Run tests
        env:
          # set the token used by gh cli (docs: https://cli.github.com/manual/gh_help_environment)
          GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event.inputs.public }}" == "true" ]]; then
            PUBLIC_OR_PRIVATE="public"
          else
            PUBLIC_OR_PRIVATE="private"
          fi

          gh repo create \
            "phitoduck/${{ github.event.inputs.repo_name }}" \
            "--$PUBLIC_OR_PRIVATE"

  upsert-pypi-secrets:
    name: Upsert PyPI Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Configure git user
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          gh secret set TEST_PYPI_TOKEN \
            --body "${{ secrets.TEST_PYPI_TOKEN }}" \
            --repos "phitoduck/${{ github.event.inputs.repo_name }}"
          gh secret set PROD_PYPI_TOKEN \
            --body "${{ secrets.PROD_PYPI_TOKEN }}" \
            --repos "phitoduck/${{ github.event.inputs.repo_name }}"

  open-pr-to-populate-from-template:
    name: Open PR - Populate from template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: /bin/bash -x run.sh install
      - name: Configure git user
        run: |
          git config --global user.email "test@test.com"
          git config --global user.name "Eric Riddoch"
      - name: Run tests
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}  
        run: |
          # clone the created repo
          gh repo clone phitoduck/${{ github.event.inputs.repo_name }}

          # delete the contents inside except for the .git folder
          mv ${{ github.event.inputs.repo_name }}/.git .
          rm -rf ${{ github.event.inputs.repo_name }}

          # generate the project
          REPO_NAME="${{ github.event.inputs.repo_name }}" \
          PACKAGE_IMPORT_NAME="${{ github.event.inputs.package_import_name }}" \
            /bin/bash -x run.sh generate-project

          # put the .git folder in the generated project
          mv .git ${{ github.event.inputs.repo_name }}

          # commit the changes
          cd ${{ github.event.inputs.repo_name }}
          # branch name should have the build number
          BRANCH_NAME="populate-from-template-${{ github.run_number }}"
          git checkout -b $BRANCH_NAME
          git add --all
          git commit -m 'feat!: populated from `python-course-cookiecutter-v1` template'
          git push --set-upstream origin $BRANCH_NAME

          # open a PR
          gh pr create \
            --title "Populated from `python-course-cookiecutter-v1` template" \
            --body "This PR was generated by a GitHub Action. It populates the repo from the \`python-course-cookiecutter-v1\` template." \
            --base main \
            --head $BRANCH_NAME \
            --repo "phitoduck/${{ github.event.inputs.repo_name }}"

          
          




